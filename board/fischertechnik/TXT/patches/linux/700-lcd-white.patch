diff -ruN linux-ti-linux-4.1.y/drivers/staging/fbtft/fb_ili9341_txt.c linux-ti-linux-4.1.y/drivers/staging/fbtft/fb_ili9341_txt_ke.c
--- linux-ti-linux-4.1.y/drivers/staging/fbtft/fb_ili9341_txt.c	2020-03-11 17:27:54.706889000 +0100
+++ linux-ti-linux-4.1.y/drivers/staging/fbtft/fb_ili9341_txt_ke.c	2020-03-11 17:27:54.706889000 +0100
@@ -8,6 +8,7 @@
  *
  * Copyright (C) 2013 Christian Vogelgsang
  * Based on adafruit22fb.c by Noralf Tronnes
+ * some changes for ft-TXT 2020.03 by KE
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -274,6 +275,8 @@
     *pLcdData = (unsigned short) (u32RowStart & 0x00FF);        // untere 8 Start-Adressbits setzen
     *pLcdData = (unsigned short) (u32RowEnd >> 8) & 0x00FF;     // obere 8 End-Adressbits setzen   
     *pLcdData = (unsigned short) (u32RowEnd & 0x00FF);          // untere 8 End-Adressbits setzen  
+    
+    *pLcdCmd = 0x0000;
 }
 
 // Clear Window 
@@ -294,6 +297,7 @@
         	*pLcdData = (unsigned short) u32ColorRGB;           // Daten schreiben
         }
     }
+    *pLcdCmd = 0x0000;
 }
 
 /**
@@ -346,6 +350,7 @@
              pLcdCmd, par->pdata->display.pLcdCmd, 
              pLcdData, par->pdata->display.pLcdData);
 
+    printk(KERN_WARNING "ft-TXT LCD V1.1\n");
 /*
     // First Set PLL 
     psCmWkupReg->clkmod_dpll_disp = (psCmWkupReg->clkmod_dpll_disp & 0x0007) | 0x00000004;    // set Bypass Mode
@@ -384,131 +389,111 @@
     pLcdBase->clkc_enable = 0x00000002;         // LIDD Clock enable
 */
     // Display initialisieren
-    *pLcdCmd = 0x0001;                          // 1.   Software Reset schreiben
-    mdelay(120);                             //      Wait 120msek
-
-    *pLcdCmd = 0x0028;                          // 2.   Display off
-
-    *pLcdCmd = 0x00CF;                          // 3.   Power Control B
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0081;
-    *pLcdData = 0x0030;
-
-    *pLcdCmd = 0x00ED;                          // 4.   Power On Sequence Control
-    *pLcdData = 0x0003;
-    *pLcdData = 0x0012;
-    *pLcdData = 0x0081;
-
-    *pLcdCmd = 0x00E8;                          // 5.   Driver Timing
-    *pLcdData = 0x0085;
-    *pLcdData = 0x0001;
-    *pLcdData = 0x0079;
-
-    *pLcdCmd = 0x00CB;                          // 6.   Driver Timing
-    *pLcdData = 0x0039;
-    *pLcdData = 0x002C;
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0034;
-    *pLcdData = 0x0002;
-
-    *pLcdCmd = 0x00F7;                          // 7.   Pump ratio control
-    *pLcdData = 0x0020;
-
-    *pLcdCmd = 0x00EA;                          // 8.   Driver Timing Control B
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0000;
-
-    *pLcdCmd = 0x00C0;                          // 9.   Power Control
-    *pLcdData = 0x0026;
-
-    *pLcdCmd = 0x00C1;                          // 10.  Power Control 2
-    *pLcdData = 0x0011;
-
-    *pLcdCmd = 0x00C5;                          // 11.  VCOM Control
-    *pLcdData = 0x0035;
-    *pLcdData = 0x003E;
-
-    *pLcdCmd = 0x00C7;                          // 12.  VCOM Control 2
-    *pLcdData = 0x00BE;
-
-    *pLcdCmd = 0x0036;                          // 13.  Memory Access Control
-    *pLcdData = 0x0048;                         //      0100 0000 --> an X spiegeln, ferner statt RGB, BGR verwenden
-
-    *pLcdCmd = 0x003A;                          // 14.  Pixel Format
-    *pLcdData = 0x0055;
-
-    *pLcdCmd = 0x00B1;                          // 15.  Frame Rate
-    *pLcdData = 0x0000;
-    *pLcdData = 0x001B;
-
-    *pLcdCmd = 0x00B4;                          // 16.  Display Inversion Control
-    *pLcdData = 0x0000;
-
-    *pLcdCmd = 0x00F2;                          // 17.  Enable 3G
-    *pLcdData = 0x0002;
-
-    *pLcdCmd = 0x0026;                          // 18.  Gamma Set
-    *pLcdData = 0x0001;
-
-    *pLcdCmd = 0x00E0;                          // 19.  Positive Gamma Correction
-    *pLcdData = 0x001F;
-    *pLcdData = 0x001A;
-    *pLcdData = 0x0018;
-    *pLcdData = 0x000A;
-    *pLcdData = 0x000F;
-    *pLcdData = 0x0006;
-    *pLcdData = 0x0045;
-    *pLcdData = 0x0087;
-    *pLcdData = 0x0032;
-    *pLcdData = 0x000A;
-    *pLcdData = 0x0007;
-    *pLcdData = 0x0002;
-    *pLcdData = 0x0007;
-    *pLcdData = 0x0005;
-    *pLcdData = 0x0000;
-
-    *pLcdCmd = 0x00E1;                          // 20.  Negative Gamma Correction
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0025;
-    *pLcdData = 0x0027;
-    *pLcdData = 0x0005;
-    *pLcdData = 0x0010;
-    *pLcdData = 0x0009;
-    *pLcdData = 0x003A;
-    *pLcdData = 0x0078;
-    *pLcdData = 0x004D;
-    *pLcdData = 0x0005;
-    *pLcdData = 0x0018;
-    *pLcdData = 0x000D;
-    *pLcdData = 0x0038;
-    *pLcdData = 0x003A;
-    *pLcdData = 0x001F;
-
-    *pLcdCmd = 0x002A;                          // 21.  Column Address Set
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0000;
-    *pLcdData = 0x00EF;
-
-    *pLcdCmd = 0x002B;                          // 22.  Page Address Set
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0000;
-    *pLcdData = 0x0001;
-    *pLcdData = 0x003F;
-
-    *pLcdCmd = 0x00B7;                          // 23.  Entry Mode Set
-    *pLcdData = 0x0007;
-
-    *pLcdCmd = 0x00B6;                          // 24.  Display Function Control
-    *pLcdData = 0x000A;
-    *pLcdData = 0x0082;
-    *pLcdData = 0x0027;
-    *pLcdData = 0x0000;
-
-    *pLcdCmd = 0x0011;                          // 25.  Sleep Out
-    mdelay(5);                               //      Wait 5msek
-    *pLcdCmd = 0x0029;                          // 26.  Display On
-
+    *pLcdCmd = 0x0000;                          // 001
+    *pLcdCmd = 0x0001;                          // 
+    mdelay(180);                                // 
+    *pLcdCmd = 0x0000;                          // 
+    *pLcdCmd = 0x0028;                          // 005
+    *pLcdCmd = 0x00CF;                          // 
+    *pLcdData = 0x0000;                         // 
+    *pLcdData = 0x0081;                         //
+    *pLcdData = 0x0030;                         //
+    *pLcdCmd = 0x00ED;                          // 010
+    *pLcdData = 0x0064;                         //
+    *pLcdData = 0x0003;                         //
+    *pLcdData = 0x0012;                         //
+    *pLcdData = 0x0081;                         //
+    *pLcdCmd = 0x00E8;                          // 015 
+    *pLcdData = 0x0085;                         //
+    *pLcdData = 0x0001;                         //
+    *pLcdData = 0x0079;                         //
+    *pLcdCmd = 0x00CB;                          // 
+    *pLcdData = 0x0039;                         // 020
+    *pLcdData = 0x002C;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0034;                         //
+    *pLcdData = 0x0002;                         //
+    *pLcdCmd = 0x00F7;                          // 025 
+    *pLcdData = 0x0020;                         //
+    *pLcdCmd = 0x00EA;                          // 
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdCmd = 0x00C0;                          // 030
+    *pLcdData = 0x0026;                         //
+    *pLcdCmd = 0x00C1;                          // 
+    *pLcdData = 0x0011;                         //
+    *pLcdCmd = 0x00C5;                          // 
+    *pLcdData = 0x0035;                         // 035
+    *pLcdData = 0x003E;                         //
+    *pLcdCmd = 0x00C7;                          // 
+    *pLcdData = 0x00BE;                         //
+    *pLcdCmd = 0x0036;                          // 
+    *pLcdData = 0x0048;                         // 040
+    *pLcdCmd = 0x003A;                          // 
+    *pLcdData = 0x0055;                         //
+    *pLcdCmd = 0x00B1;                          // 
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x001B;                         // 045
+    *pLcdCmd = 0x0000;                          // 
+    *pLcdCmd = 0x00B4;                          //
+    *pLcdData = 0x0000;                         //
+    *pLcdCmd = 0x00F2;                          // 
+    *pLcdData = 0x0002;                         // 050
+    *pLcdCmd = 0x0026;                          // 
+    *pLcdData = 0x0001;                         //
+    *pLcdCmd = 0x00E0;                          // 
+    *pLcdData = 0x001F;                         //
+    *pLcdData = 0x001A;                         // 055
+    *pLcdData = 0x0018;                         //
+    *pLcdData = 0x000A;                         //
+    *pLcdData = 0x000F;                         //
+    *pLcdData = 0x0006;                         //
+    *pLcdData = 0x0045;                         // 060
+    *pLcdData = 0x0087;                         //
+    *pLcdData = 0x0032;                         //
+    *pLcdData = 0x000A;                         //
+    *pLcdData = 0x0007;                         //
+    *pLcdData = 0x0002;                         // 065
+    *pLcdData = 0x0007;                         //
+    *pLcdData = 0x0005;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdCmd = 0x00E1;                          //
+    *pLcdData = 0x0000;                         // 070
+    *pLcdData = 0x0025;                         //
+    *pLcdData = 0x0027;                         //
+    *pLcdData = 0x0005;                         //
+    *pLcdData = 0x0010;                         //
+    *pLcdData = 0x0009;                         // 075
+    *pLcdData = 0x003A;                         //
+    *pLcdData = 0x0078;                         //
+    *pLcdData = 0x004D;                         //
+    *pLcdData = 0x0005;                         //
+    *pLcdData = 0x0018;                         // 080
+    *pLcdData = 0x000D;                         //
+    *pLcdData = 0x0038;                         //
+    *pLcdData = 0x003A;                         //
+    *pLcdData = 0x001F;                         //
+    *pLcdCmd = 0x002A;                          // 085
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x00EF;                         //
+    *pLcdCmd = 0x002B;                          // 090
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0000;                         //
+    *pLcdData = 0x0001;                         //
+    *pLcdData = 0x003F;                         //
+    *pLcdCmd = 0x00B7;                          // 095
+    *pLcdData = 0x0007;                         //
+    *pLcdCmd = 0x00B6;                          //
+    *pLcdData = 0x000A;                         //
+    *pLcdData = 0x0082;                         //
+    *pLcdData = 0x0027;                         // 100
+    *pLcdData = 0x0000;                         //
+    *pLcdCmd = 0x0011;                          //
+    mdelay(40);                                 //
+    *pLcdCmd = 0x0029;                          // 104
+    *pLcdCmd = 0x0000;                          //
 
 /*
 	ClearWindowRGB( 0, 0, 240, 320, 0xF800);
